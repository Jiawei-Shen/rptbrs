var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".pager {\n  text-align: center;\n  vertical-align: middle;\n  margin: 10px 0;\n  position: relative;\n}\n.pager a {\n  cursor: pointer;\n  text-decoration: none;\n}\n.pager .setter {\n  display: inline-block;\n  vertical-align: middle;\n  line-height: 1.5em;\n  float: left;\n}\n.pager .select-wrapper {\n  line-height: 28px;\n}\n.pager .select-wrapper .select {\n  z-index: 5;\n  padding-right: 20px !important;\n}\n.pager .go {\n  float: right;\n  display: inline-block;\n  margin-right: 20px;\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n.pager .go input {\n  line-height: 26px;\n  border-radius: 2px;\n  width: 40px;\n  border: 1px solid #DDD;\n  text-align: center;\n}\n.pagination-wrapper {\n  text-align: center !important;\n  position: relative;\n  min-width: 800px;\n}\n.pagination {\n  margin: 0;\n  display: -webkit-inline-box;\n  display: -webkit-inline-flex;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  vertical-align: middle;\n  transform: translateX(-15%);\n  background: #FFF;\n}\n.pagination i {\n  color: #333;\n}\n.pagination a {\n  cursor: pointer;\n  text-decoration: none;\n  outline: none;\n}\n.pagination .item {\n  min-width: 3em;\n  text-align: center;\n  line-height: 30px;\n  border: 1px solid #CCC;\n  margin-left: -1px;\n  padding: 0 10px;\n  box-sizing: border-box;\n}\n.pagination .active.item {\n  color: rgba(0, 0, 0, 0.95);\n  background-color: #EEE;\n}\n.pagination .item:last-child:before {\n  display: none;\n}")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _SelectList = require('../SelectList');

var _SelectList2 = _interopRequireDefault(_SelectList);

var _ui = require('../base/ui');

var _ui2 = _interopRequireDefault(_ui);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var pageInfo = {
    sizeOptions: [20, 50, 100],
    needJumper: true,
    currentPage: 1,
    pageSize: 20,
    totalSize: 0,
    totalPage: 0,
    displayNum: 6,
    items: false
};

exports.default = {
    replace: true,
    inherit: false,
    params: pageInfo,
    private: {
        pages: [],
        sizeList: [],
        edgeNum: 2
    },
    mixins: [_ui2.default],
    components: { SelectList: _SelectList2.default },
    ready: function ready() {
        if (this.items) {
            this.totalSize = this.items.length;
            this.totalPage = Math.ceil(this.totalSize / this.pageSize);
        }

        this.updatePages();

        this.sizeList = this.sizeOptions.map(function (x) {
            return { name: x, value: x };
        });

        this.selectPage(this.currentPage);
    },

    watch: {
        currentPage: function currentPage(pid) {
            if (this.pageCount > 3000 && pid > 1000) {
                this.displayNum = Math.max(3, 6 - (this.totalPage + '').length);
            } else {
                this.displayNum = 6;
            }
            this.updatePages();
        },
        'params.pageSize': function paramsPageSize(size) {
            this.pageSize = size;
            this.totalPage = getTotalPage(this.pageSize, this.totalSize);
            this.updatePages();
            this.selectPage(this.currentPage);
        },
        'params.items': function paramsItems() {
            (0, _assign2.default)(this, this.params);
            this.updatePages();
            this.selectPage(this.currentPage);
        },
        'params.totalSize': function paramsTotalSize(val) {
            (0, _assign2.default)(this, this.params);
            if (this.params.totalPage === undefined) {
                this.totalPage = this.pageCount;
            }
            this.updatePages();
        },
        'params.totalPage': function paramsTotalPage() {
            (0, _assign2.default)(this, this.params);
            this.updatePages();
        },
        sizeOptions: function sizeOptions(value) {
            var sizer = this.$refs.sizer;

            sizer = sizer || this.$children[0];

            sizer.options = value;
            sizer.value = this.pageSize;
        }
    },
    computed: {
        noPrevious: function noPrevious() {
            return this.currentPage === 1;
        },
        noNext: function noNext() {
            return this.currentPage === this.totalPage;
        },
        pageCount: function pageCount() {
            return getTotalPage(this.pageSize, this.totalSize);
        }
    },
    methods: {
        flip: function flip(e) {
            if (e.key === 'ArrowRight') {
                this.selectPage(this.currentPage + 1);
            } else if (e.key === 'ArrowLeft' && +this.currentPage) {
                this.selectPage(this.currentPage - 1);
            }
        },
        updatePages: function updatePages() {
            this.pages = getPages(this.currentPage, this.totalPage, this.edgeNum, this.displayNum);
        },
        selectPage: function selectPage(num) {
            if (this.currentPage !== num && num > 0 && num <= this.totalPage) {
                this.currentPage = num;
                this.emit('page-change', {
                    pageSize: this.pageSize,
                    currentPage: num
                });
            }
            if (this.items) {
                var start = this.pageSize * (this.currentPage - 1);
                var end = start + this.pageSize;
                var list = this.items.slice(start, end);
                this.emit('list-change', {
                    list: list,
                    currentPage: this.currentPage,
                    pageSize: this.pageSize
                });
            }
        },
        pageTo: function pageTo(event) {
            var target = event.target;
            if (target.value > 0) {
                this.selectPage(target.value);
            }
        },
        selectSize: function selectSize(event) {
            var size = event.data.value;
            if (this.pageSize !== size && size > 0) {
                this.pageSize = size;

                this.totalPage = Math.ceil(this.totalSize / this.pageSize);
                this.updatePages();

                if (this.currentPage > this.totalPage) {
                    this.selectPage(this.totalPage);
                } else {
                    this.selectPage(this.currentPage);
                }

                this.emit('size-change', {
                    totalPage: this.totalPage,
                    pageSize: this.pageSize
                });
            }
        }
    }
};


function getTotalPage(pageSize, totalSize) {
    var totalPage = pageSize < 1 ? 1 : Math.ceil(totalSize / pageSize);
    return Math.max(totalPage || 0, 1);
}

function makePage(number, text, isActive) {
    return {
        number: number,
        text: text,
        disabled: number === -1
    };
}

function getInterval(currentPage, pageCount, displayCount) {
    var half = Math.floor(displayCount / 2);
    var np = pageCount;
    var upperLimit = np - displayCount;
    var start = currentPage > half ? Math.max(Math.min(currentPage - half, upperLimit), 0) : 0;
    var end = currentPage > half ? Math.min(currentPage + half, np) : Math.min(displayCount, np);
    return [start, end];
}

function getPages(currentPage, totalPage, edgeCount, displayCount) {
    var ret = [];
    var skipText = '...';
    var np = totalPage;
    var interval = getInterval(currentPage - 1, totalPage, displayCount);

    if (interval[0] > 0 && edgeCount > 0) {
        var end = Math.min(edgeCount, interval[0]);
        for (var i = 0; i < end; i++) {
            var page = makePage(i + 1, i + 1);
            ret.push(page);
        }
        if (edgeCount < interval[0]) {
            var _page = makePage(-1, skipText);
            ret.push(_page);
        }
    }

    var nip = interval[1];
    for (var _i = interval[0]; _i < nip; _i++) {
        var _page2 = makePage(_i + 1, _i + 1);
        ret.push(_page2);
    }

    if (interval[1] < np && edgeCount > 0) {
        if (np - edgeCount > interval[1]) {
            var _page3 = makePage(-1, skipText);
            ret.push(_page3);
        }
        var begin = Math.max(np - edgeCount, interval[1]);
        for (var _i2 = begin; _i2 < np; _i2++) {
            var _page4 = makePage(_i2 + 1, _i2 + 1);
            ret.push(_page4);
        }
    }

    return ret;
}
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"pager menu"},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.totalPage && _vm.sizeOptions && _vm.sizeOptions.length > 1),expression:"totalPage && sizeOptions && sizeOptions.length > 1"}],staticClass:"setter"},[_vm._v("\n        "+_vm._s(_vm.$lt('PAGE_SIZE'))+"\n        "),_c('select-list',{attrs:{"params":{items: _vm.sizeList, value: _vm.pageSize},"refer":"sizer"},on:{"value-change":_vm.selectSize}})],1),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.totalPage > 0),expression:"totalPage > 0"}],staticClass:"pagination-wrapper"},[_c('div',{staticClass:"pagination",on:{"keyup":function($event){_vm.flip($event)}}},[_c('a',{staticClass:"item",class:{ 'disabled': _vm.noPrevious },on:{"click":function($event){_vm.selectPage(_vm.currentPage - 1)}}},[_c('i',{staticClass:"sm-arrow-left"})]),_vm._v(" "),_vm._l((_vm.pages),function(page){return _c('a',{staticClass:"item",class:{ 'active': page.number == _vm.currentPage, 'disabled': page.disabled },attrs:{"tabindex":page.text},on:{"click":function($event){_vm.selectPage(page.number)}}},[_vm._v("\n                "+_vm._s(page.text)+"\n            ")])}),_vm._v(" "),_c('a',{staticClass:"item",class:{ 'disabled': _vm.noNext },on:{"click":function($event){_vm.selectPage(_vm.currentPage + 1)}}},[_c('i',{staticClass:"sm-arrow-right"})])],2)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.needJumper && _vm.totalPage > 1),expression:"needJumper && totalPage > 1"}],staticClass:"go"},[_vm._v("\n        "+_vm._s(_vm.$lt('JUMP_TO'))+"\n        "),_c('input',{style:({width: ((_vm.currentPage + '-').length) + 'em'}),attrs:{"type":"number","size":"4","min":"1","max":_vm.totalPage},domProps:{"value":_vm.currentPage},on:{"change":function($event){$event.preventDefault();_vm.pageTo($event)},"keyup":function($event){_vm.flip($event)}}})])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vueify/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-1295b0bf", __vue__options__)
  } else {
    hotAPI.reload("data-v-1295b0bf", __vue__options__)
  }
})()}