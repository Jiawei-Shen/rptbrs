var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".region-component-panel {\n  background: #fff;\n}\n.region-component-panel input.checkbox-indeterminate {\n  background-position: -45px 0;\n}\n.region-component-panel .all-region {\n  background: #f8f8f8;\n  height: 30px;\n}\n.region-component-panel ul {\n  line-height: 0;\n}\n.region-component-panel .area-li {\n  margin-top: 5px;\n}\n.region-component-panel .area-li,\n.region-component-panel .all-region {\n  padding-left: 100px;\n  position: relative;\n  line-height: 26px;\n}\n.region-component-panel .area-li .area-content,\n.region-component-panel .all-region .area-content {\n  position: absolute;\n  left: 10px;\n  top: 3px;\n}\n.region-component-panel .area-li li,\n.region-component-panel .all-region li {\n  display: inline-block;\n  line-height: 26px;\n  position: relative;\n  color: #26bc89;\n  width: 100px;\n  font-size: 12px;\n  box-sizing: border-box;\n}\n.region-component-panel .area-content,\n.region-component-panel .city-content,\n.region-component-panel .pro-content {\n  cursor: pointer;\n  display: block;\n  position: relative;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.region-component-panel .area-content input,\n.region-component-panel .city-content input,\n.region-component-panel .pro-content input {\n  margin-right: 10px;\n  cursor: pointer;\n  position: relative;\n  top: 1px;\n  width: 14px;\n  height: 14px;\n  vertical-align: baseline;\n}\n.region-component-panel .area-content span,\n.region-component-panel .city-content span,\n.region-component-panel .pro-content span {\n  width: 26px;\n  white-space: pre;\n  font-size: 12px;\n}\n.region-component-panel .li-province {\n  display: inline-block;\n  border: 1px solid #fff;\n}\n.region-component-panel .ul-city {\n  display: none;\n  position: absolute;\n  background: #fff;\n  width: 310px;\n  left: -1px;\n  top: 100%;\n  z-index: 2;\n  line-height: 26px;\n  border: 1px solid #e4e4e4;\n  padding-top: 6px;\n}\n.region-component-panel .city-content {\n  padding: 0 10px;\n}\n.region-component-panel .li-province {\n  border: 1px solid #fff;\n}\n.region-component-panel .li-province .pro-parent {\n  border: 1px solid #fff;\n  display: block;\n  position: relative;\n  padding: 0 10px;\n}\n.region-component-panel .li-province .pro-parent .pro-shadow {\n  width: 100%;\n  height: 9px;\n  background: #fff;\n  top: 90%;\n  position: absolute;\n  z-index: 9;\n  left: 0;\n  display: none;\n}\n.region-component-panel .li-province .pro-parent:hover {\n  border: 1px solid #e4e4e4;\n  background: #fff;\n  z-index: 9;\n  box-shadow: 0px 0px 2px #e4e4e4;\n}\n.region-component-panel .li-province .pro-parent:hover .ul-city {\n  box-shadow: 0px 0px 2px #e4e4e4;\n}")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _ui = require('../base/ui');

var _ui2 = _interopRequireDefault(_ui);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var originData = require('./regionData');

var regionLevel = {
    country: 10,
    area: 11,
    province: 12,
    city: 13
};
var regionData = JSON.parse((0, _stringify2.default)(originData));
var params = {
    regionObj: buildRegionTree(regionData),

    areaNameTree: buildNameTree(regionData)
};
exports.default = {
    params: params,
    mixins: [_ui2.default],
    methods: {
        clear: function clear() {
            this.setMineState('100001', false);
        },
        proMouseOver: function proMouseOver(e, id) {
            var me = this;
            var cTarget = e.target;
            if (me.regionObj[id].children.length) {
                me.regionObj[id].mouseover = true;
                setTimeout(function () {
                    if (me.regionObj[id].mouseover) {
                        var city = cTarget.querySelector('.ul-city');
                        city && (city.style.display = 'block');
                        cTarget.querySelector('.pro-shadow').style.display = 'block';
                    }
                }, 200);
            }
        },
        proMouseOut: function proMouseOut(e, id) {
            var cTarget = e.target;
            this.regionObj[id].mouseover = false;
            var city = cTarget.querySelector('.ul-city');
            city && (city.style.display = '');
            cTarget.querySelector('.pro-shadow').style.display = '';
        },
        setMineState: function setMineState(id, flag, type, isForce) {
            var item = this.regionObj[id];
            var children = item.children;
            var clength = children.length;
            type = type ? type : 'selected';
            if (type == "selected" && item.disabled && !isForce) {
                return;
            }
            item[type] = flag;
            if (clength) {
                item.selectedChildrenNum = flag ? clength : 0;
                for (var i = 0; i < clength; i++) {
                    this.regionObj[children[i].id][type] = flag;
                    this.setMineState(children[i].id, flag, type, isForce);
                }
            }
        },
        setParentState: function setParentState(id, cState) {
            var me = this;
            var pid = me.regionObj[id].parentId;
            if (!+pid) {
                return;
            }
            var citem = me.regionObj[pid];
            citem.selectedChildrenNum += cState ? 1 : -1;
            function doAction(tag) {
                citem.selected = tag;
                if (me.regionObj[citem.parentId]) {
                    me.setParentState(citem.id, tag);
                }
            }

            if (!citem.selected && citem.selectedChildrenNum >= citem.children.length) {
                doAction(true);
            } else if (citem.selected && citem.selectedChildrenNum < citem.children.length) {
                doAction(false);
            }
        },
        clickArea: function clickArea(id, forceSet, forceFlag) {
            var cState = forceSet ? forceFlag : this.regionObj[id].selected;
            this.setMineState(id, cState);
            this.setParentState(id, cState);
            this.$emit('select-changed');
        },
        setDisabled: function setDisabled(id, flag) {
            id = id ? id : '100001';
            flag && this.clear();
            this.setMineState(id, flag, 'disabled', true);
        },
        setSelectedItemByNames: function setSelectedItemByNames(names) {
            this.clear();
            var areaNameArr = names.split(';');
            for (var i = 0; i < areaNameArr.length; i++) {
                var citem = this.areaNameTree[areaNameArr[i]];
                citem && this.clickArea(citem.id, true, true);
            }
        },
        setSelectedItemByIds: function setSelectedItemByIds(ids) {
            this.clear();
            var areaIdArr = ids.split(';');
            for (var i = 0; i < areaIdArr.length; i++) {
                this.clickArea(areaIdArr[i], true, true);
            }
        },
        getSelectedResult: function getSelectedResult() {
            var selectedArr = [];
            var resNameStr = [];
            var resIdsStr = [];
            var me = this;

            function getSelectedItem(id, preName) {
                var item = me.regionObj[id];
                if (item.selected && item.level > regionLevel.area) {
                    selectedArr.push(item);
                    resNameStr.push(preName ? preName + '-' + item.name : item.name);
                    resIdsStr.push(item.id);
                } else if (item.children.length > 0) {
                    var cChildren = item.children;
                    for (var i = 0; i < cChildren.length; i++) {
                        getSelectedItem(cChildren[i].id, item.level > regionLevel.area ? item.name : false);
                    }
                }
            }

            getSelectedItem(100001);
            return {
                arr: selectedArr,
                names: resNameStr.join(';'),
                ids: resIdsStr.join(';')
            };
        }
    }
};

function buildRegionTree(regionObj) {
    var citem = null;
    for (var key in regionObj) {
        if (regionObj.hasOwnProperty(key)) {
            citem = regionObj[key];
            citem.selected = false;
            citem.selectedChildrenNum = 0;
            citem.disabled = false;
            citem.children = citem.children || [];
            if (citem.parentId > 0) {
                var parentItem = regionObj[citem.parentId];
                parentItem.children = parentItem.children || [];
                parentItem.children.push(citem);
            }
        }
    }
    return regionObj;
}

function buildNameTree(regionObj) {
    var nameTree = {};
    for (var i in regionObj) {
        var citem = regionObj[i];
        if (regionObj.hasOwnProperty(i) && citem.level > regionLevel.area) {
            if (citem.level < 13) {
                nameTree[citem.name] = citem;
            }
            for (var j = 0; j < citem.children.length; j++) {
                var cjitem = citem.children[j];
                nameTree[citem.name + '-' + cjitem.name] = cjitem;
                if (!nameTree[cjitem.name]) {
                    nameTree[cjitem.name] = cjitem;
                }
            }
        }
    }
    return nameTree;
}

function setDialogPosition(content, $parent) {
    var $me = content;
    var $cityDom = $me.querySelector('.ul-city');
    var $shadow = $me.querySelector('.pro-shadow');
    var mo = { left: $me.offsetLeft, top: $me.offsetTop };
    var po = { left: $parent.offsetLeft, top: $parent.offsetTop };
    var preLeft = mo.left - po.left;
    var preTop = mo.top - po.top;
    var lasRight = $parent.clientWidth - preLeft - $me.clientWidth;
    var lasBottom = $parent.clientHeight - preTop - $me.clientHeight;
    var ch = $cityDom.clientHeight;
    var cw = $cityDom.clientWidth;
    var position = { left: -1, top: $me.clientHeight };
    if (lasRight < cw && preLeft > lasRight) {
        position.left = $me.clientWidth - cw + 19;
    }
    if (lasBottom < ch && preTop > lasBottom) {
        position.top = 0 - 2 - ch;
        $shadow.style.top = -2 + 'px';
        $me.addClass('top');
    }
    $cityDom.style.left = position.left + 'px';
    $cityDom.style.top = position.top + 'px';
}
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"region-component-panel"},[_c('div',{staticClass:"all-region"},[_c('div',{staticClass:"area-content"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.regionObj['100001'].selected),expression:"regionObj['100001'].selected"}],class:{'checkbox-indeterminate':_vm.regionObj['100001'].selectedChildrenNum > 0 && _vm.regionObj['100001'].selectedChildrenNum < _vm.regionObj['100001'].children.length},attrs:{"type":"checkbox","disabled":_vm.regionObj['100001'].disabled},domProps:{"checked":Array.isArray(_vm.regionObj['100001'].selected)?_vm._i(_vm.regionObj['100001'].selected,null)>-1:(_vm.regionObj['100001'].selected)},on:{"change":[function($event){var $$a=_vm.regionObj['100001'].selected,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$c){$$i<0&&(_vm.regionObj['100001'].selected=$$a.concat($$v))}else{$$i>-1&&(_vm.regionObj['100001'].selected=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.regionObj['100001'].selected=$$c}},function($event){_vm.clickArea('100001')}]}}),_vm._v("\n            所有地域\n        ")])]),_vm._v(" "),_c('ul',_vm._l((_vm.regionObj['100001'].children),function(value){return _c('li',{staticClass:"area-li"},[_c('div',{staticClass:"area-content"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.regionObj[value.id].selected),expression:"regionObj[value.id].selected"}],class:{'checkbox-indeterminate':value.selectedChildrenNum > 0 && value.selectedChildrenNum < value.children.length},attrs:{"type":"checkbox","disabled":_vm.regionObj[value.id].disabled},domProps:{"checked":Array.isArray(_vm.regionObj[value.id].selected)?_vm._i(_vm.regionObj[value.id].selected,null)>-1:(_vm.regionObj[value.id].selected)},on:{"change":[function($event){var $$a=_vm.regionObj[value.id].selected,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$c){$$i<0&&(_vm.regionObj[value.id].selected=$$a.concat($$v))}else{$$i>-1&&(_vm.regionObj[value.id].selected=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.regionObj[value.id].selected=$$c}},function($event){_vm.clickArea(value.id)}]}}),_vm._v("\n                "+_vm._s(value.name)+":\n            ")]),_vm._v(" "),_c('ul',_vm._l((value.children),function(item){return _c('li',{staticClass:"li-province"},[_c('div',{staticClass:"pro-parent",on:{"mouseleave":function($event){if($event.target !== $event.currentTarget){ return; }_vm.proMouseOut($event, item.id)},"mouseenter":function($event){if($event.target !== $event.currentTarget){ return; }_vm.proMouseOver($event, item.id)}}},[_c('div',{staticClass:"pro-shadow"}),_vm._v(" "),_c('div',{staticClass:"pro-content"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.regionObj[item.id].selected),expression:"regionObj[item.id].selected"}],class:{'checkbox-indeterminate':item.selectedChildrenNum > 0 && item.selectedChildrenNum < item.children.length},attrs:{"type":"checkbox","disabled":_vm.regionObj[item.id].disabled},domProps:{"checked":Array.isArray(_vm.regionObj[item.id].selected)?_vm._i(_vm.regionObj[item.id].selected,null)>-1:(_vm.regionObj[item.id].selected)},on:{"change":[function($event){var $$a=_vm.regionObj[item.id].selected,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$c){$$i<0&&(_vm.regionObj[item.id].selected=$$a.concat($$v))}else{$$i>-1&&(_vm.regionObj[item.id].selected=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.regionObj[item.id].selected=$$c}},function($event){_vm.clickArea(item.id)}]}}),_vm._v(" "),_c('span',[_vm._v(_vm._s(item.name))])]),_vm._v(" "),(item.children.length)?_c('ul',{staticClass:"ul-city"},_vm._l((item.children),function(citem){return _c('li',{staticClass:"li-city"},[_c('div',{staticClass:"city-content"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.regionObj[citem.id].selected),expression:"regionObj[citem.id].selected"}],attrs:{"type":"checkbox","disabled":_vm.regionObj[citem.id].disabled},domProps:{"checked":Array.isArray(_vm.regionObj[citem.id].selected)?_vm._i(_vm.regionObj[citem.id].selected,null)>-1:(_vm.regionObj[citem.id].selected)},on:{"change":[function($event){var $$a=_vm.regionObj[citem.id].selected,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$c){$$i<0&&(_vm.regionObj[citem.id].selected=$$a.concat($$v))}else{$$i>-1&&(_vm.regionObj[citem.id].selected=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.regionObj[citem.id].selected=$$c}},function($event){_vm.clickArea(citem.id)}]}}),_vm._v(" "),_c('span',{attrs:{"title":citem.name}},[_vm._v(_vm._s(citem.name))])])])})):_vm._e()])])}))])}))])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vueify/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-43e07cf7", __vue__options__)
  } else {
    hotAPI.reload("data-v-43e07cf7", __vue__options__)
  }
})()}