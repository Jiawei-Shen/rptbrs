var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".calendar {\n  width: 235px;\n  padding: 10px;\n  background: #fff;\n  position: relative;\n  color: #333;\n}\n.calendar .calendar-enter,\n.calendar .calendar-leave {\n  opacity: 0;\n  transform: translate3d(0, -10px, 0);\n}\n.calendar .toast.warn {\n  color: #C00;\n  background: #EEE;\n  font-size: 12px;\n  padding: 2px 10px;\n  height: 30px;\n  line-height: 18px;\n  border: 1px solid #CCC;\n  border-radius: 2px;\n  position: absolute;\n  display: inline-block;\n  bottom: 0;\n  left: 30%;\n}\n.calendar .month-input {\n  width: 40px !important;\n  outline: none;\n}\n.calendar .year-input {\n  width: 65px !important;\n  outline: none;\n}\n.calendar table {\n  clear: both;\n  width: 100%;\n  margin-bottom: 10px;\n  border-collapse: collapse;\n  color: #444444;\n}\n.calendar td {\n  margin: 2px !important;\n  padding: 5px 0;\n  width: 14.28571429%;\n  text-align: center;\n  vertical-align: middle;\n  font-size: 12px;\n  line-height: 125%;\n  cursor: pointer;\n}\n.calendar td:hover {\n  background: #f3f8fa;\n}\n.calendar td.week {\n  pointer-events: none !important;\n  cursor: default !important;\n}\n.calendar td.disabled {\n  color: #c0c0c0;\n  background-color: none;\n  pointer-events: none !important;\n  cursor: default !important;\n}\n.calendar td.valid {\n  color: #42b983;\n  font-size: 12px;\n}\n.calendar td.selected {\n  color: #FFF;\n  background-color: #42b983;\n  font-size: 12px;\n}\n.calendar thead td {\n  text-transform: uppercase;\n}\n.calendar .timer {\n  margin: 10px 0;\n  text-align: center;\n}\n.calendar .timer input {\n  border-radius: 2px;\n  padding: 1px;\n  font-size: 12px;\n  line-height: 18px;\n  color: #333;\n  width: 2.8em;\n  text-align: center;\n  border: 1px solid #efefef;\n}\n.calendar .timer input:focus {\n  border: 1px solid #42b983;\n}\n.calendar .calendar-button {\n  text-align: center;\n}\n.calendar .calendar-button button {\n  border: none;\n  cursor: pointer;\n  display: inline-block;\n  min-height: 1em;\n  vertical-align: baseline;\n  background: #42b983;\n  color: #fff;\n  margin: 0 .25em 0 0;\n  padding: 5px 10px;\n  font-size: 1em;\n  line-height: 1em;\n  text-align: center;\n  border-radius: .3em;\n}\n.calendar .calendar-button button.cancel {\n  background: #efefef;\n  color: #666;\n}")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _MonthSelect = require('./MonthSelect');

var _MonthSelect2 = _interopRequireDefault(_MonthSelect);

var _i18n = require('./i18n');

var _ui = require('../base/ui');

var _ui2 = _interopRequireDefault(_ui);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var weekArray = ['SUN', 'MON', 'TUE', 'WEN', 'THU', 'FRI', 'SAT'];

var params = {
    show: false,
    value: '',
    area: false,
    maxDate: '2100-01-01',
    minDate: '1970-01-01',
    message: '',
    syncParams: true,
    isInputing: true,
    x: 0,
    y: 0,
    hour: 0,
    minute: 0,
    second: 0,
    limitDates: false,
    page: {
        year: 2016,
        month: 0,
        view: 'dates',
        showMonth: 1
    },
    days: [],
    type: 'daterange',
    format: 'YYYY-MM-DD',
    sep: '-',
    showHour: true,
    showSecond: true,
    showMinute: true,
    view: 'dates',
    weeks: weekArray
};

exports.default = {
    lang: _i18n.lang,
    params: params,
    mixins: [_ui2.default],
    ready: function ready() {
        this.updateType();
    },

    watch: {
        params: function params(value) {
            (0, _assign2.default)(this, value);
        },
        value: function value() {
            var time = new _moment2.default(this.value);
            this.page.year = time.year();
            this.page.month = time.month();
            this.update();
        },
        maxDate: function maxDate(value) {
            this.update();
        },
        minDate: function minDate(value) {
            this.update();
        }
    },
    computed: {
        style: function style() {
            return {
                left: this.x + 'px',
                top: this.y + 'px'
            };
        }
    },
    methods: {
        prepared: function prepared() {
            this.update();
        },
        zero: function zero(n) {
            return n < 10 ? '0' + n : n;
        },
        update: function update() {
            var time = new _moment2.default(this.value);
            if (this.type === 'datetime') {
                this.hour = time.hour();
                this.minute = time.minute();
                this.second = time.second();
            }
            this.render();
        },
        updateType: function updateType() {
            var time = new _moment2.default(this.value);

            if (this.params) {
                if (this.params.type === 'datetime') {
                    this.format = this.format || 'YYYY-MM-DD HH:mm';
                }
            }

            var segformat = this.format.split(' ');
            if (segformat.length === 2) {
                this.type = 'datetime';
                this.update();
            }
            this.showHour = this.format.indexOf('HH') > -1;
            this.showMinute = this.format.indexOf('mm') > -1;
            this.showSecond = this.format.indexOf('ss') > -1;
            if (!this.value) {
                this.value = new _moment2.default().format(this.format);
            }
            this.page = {
                year: time.year(),
                month: time.month(),
                showMonth: time.month() + 1
            };
            this.render();
        },
        changeMonth: function changeMonth(e) {
            (0, _assign2.default)(this.page, e.data);
            this.render();
        },
        render: function render() {
            var year = this.page.year;
            var month = this.page.month;
            this.page.showMonth = this.page.month + 1;

            var firstDate = new Date(year, month, 1);

            var m = new _moment2.default(firstDate);

            var firstDayOfMonth = firstDate.getDay();
            var lastDateOfMonth = m.daysInMonth();

            var lastDayOfLastMonth = m.subtract(-1, 'month').daysInMonth();

            var i = 0;
            var line = 0;
            var temp = [];

            for (i = 1; i <= lastDateOfMonth; i++) {
                var dow = new Date(year, month, i).getDay();

                if (dow === 0) {
                    temp[line] = [];
                } else if (i === 1) {
                    temp[line] = [];
                    var k = lastDayOfLastMonth - firstDayOfMonth + 1;

                    for (var j = 0; j < firstDayOfMonth; j++) {
                        var _col = temp[line].length;
                        temp[line].push({
                            row: line,
                            col: _col,
                            day: k,
                            disabled: true,
                            selected: false
                        });
                        k++;
                    }
                }

                var col = temp[line].length;
                var options = {
                    row: line,
                    col: col,
                    day: i,
                    selected: false
                };
                var thisTime = new _moment2.default(new Date(year, month, i));

                if (this.validate(thisTime)) {
                    options.valid = true;

                    if (this.inSelection(thisTime)) {
                        options.selected = true;
                    }
                } else {
                    options.disabled = true;
                    options.outed = true;
                }

                temp[line].push(options);

                if (dow === 6) {
                    line++;
                    temp[line] = [];
                } else if (i === lastDateOfMonth) {
                    k = 1;
                    for (dow; dow < 6; dow++) {
                        var _col2 = temp[line].length;
                        temp[line].push({
                            row: line,
                            col: _col2,
                            day: k,
                            disabled: true,
                            selected: false
                        });
                        k++;
                    }
                }
            }
            this.days = temp;
        },
        toast: function toast(message) {
            var _this = this;

            this.message = message;
            setTimeout(function () {
                _this.message = '';
            }, 1500);
        },
        select: function select(k1, k2, e) {
            if (e !== undefined) {
                e.stopPropagation();
            }

            var time = new _moment2.default(new Date(this.page.year, this.page.month, this.days[k1][k2].day));

            var info = this.isInRange(time);

            if (this.type === 'daterange' && this.limitDates) {
                if (this.maxDate && -time.diff(this.maxDate, 'days') > this.limitDates || this.minDate && time.diff(this.minDate, 'days') > this.limitDates) {
                    info = '时间跨度不能大于' + this.limitDates + '天';
                }
            }
            if (info === true) {
                this.changeValue(time);
            } else if (info) {
                this.toast(info);
            }
        },
        isInRange: function isInRange(time) {
            if (this.maxDate && this.area) {
                if (!this.isBetween(time, [this.area[0], this.maxDate])) {
                    return '不能大于结束时间';
                }
            }
            if (this.minDate && this.area) {
                if (!this.isBetween(time, [this.minDate, this.area[1]])) {
                    return '不能小于开始时间';
                }
            }
            if (this.minDate && this.maxDate) {
                if (!this.isBetween(time, [this.minDate, this.maxDate])) {
                    return '不在可选范围内';
                }
            }
            return true;
        },
        validate: function validate(value) {
            if (this.area && !this.isBetween(value, this.area)) {
                return false;
            }
            if (this.isInRange(value) !== true) {
                return false;
            }
            if (this.hour < 0 || this.hour > 23) {
                this.hour = 0;
            }
            if (this.minute < 0 || this.minute > 59) {
                this.minute = 0;
            }
            if (this.second < 0 || this.second > 59) {
                this.second = 0;
            }
            return true;
        },
        isSelectable: function isSelectable(time) {
            if (this.maxDate && this.area) {
                if (this.isBetween(time, [this.area[0], this.maxDate])) {
                    return true;
                }
            }
            if (this.minDate && this.area) {
                if (this.isBetween(time, [this.minDate, this.area[1]])) {
                    return true;
                }
            }
            return false;
        },
        inSelection: function inSelection(time) {
            if (this.type === 'date' || this.type === 'datetime') {
                return time.isSame(this.value, 'days');
            }

            if (this.maxDate && this.isBetween(time, [this.value, this.maxDate])) {
                return true;
            }
            if (this.minDate && this.isBetween(time, [this.minDate, this.value])) {
                return true;
            }
            return false;
        },
        isBetween: function isBetween(time, area) {
            var flag = time.isSameOrAfter(area[0]) && time.isSameOrBefore(area[1]);
            if (flag && this.excluded) {
                return this.excluded.every(function (t) {
                    return !time.isSame(t);
                });
            }
            return flag;
        },
        changeValue: function changeValue(target) {
            if (!this.validate(target)) {
                return false;
            }

            if (this.type === 'datetime') {
                target.hour(this.hour);
                target.minute(this.minute);
                target.second(this.second);
            }

            this.value = target.format(this.format);
            this.render();
            this.emit('value-change', { value: this.value });
        },
        changeTime: function changeTime() {
            this.changeValue(new _moment2.default(this.value));
        }
    },
    components: {
        MonthSelect: _MonthSelect2.default
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.show),expression:"show"}],staticClass:"calendar",style:(_vm.style),attrs:{"transition":"calendar","transition-mode":"out-in"},on:{"click":function($event){$event.stopPropagation();},"touchstart":function($event){$event.stopPropagation();}}},[_c('month-select',{attrs:{"params":_vm.page,"area":_vm.area},on:{"month-change":_vm.changeMonth}}),_vm._v(" "),(_vm.message)?_c('div',{staticClass:"toast warn"},[_vm._v(_vm._s(_vm.message))]):_vm._e(),_vm._v(" "),(_vm.view!=='month')?_c('table',{attrs:{"cellpadding":"5"}},[_c('thead',[_c('tr',_vm._l((_vm.weeks),function(week){return _c('td',{staticClass:"week"},[_vm._v(_vm._s(_vm.$tr(week)))])}))]),_vm._v(" "),_vm._l((_vm.days),function(row){return _c('tr',_vm._l((row),function(child){return _c('td',{class:{'valid': child.valid, 'disabled': child.disabled, selected: child.selected},on:{"click":function($event){_vm.select(child.row, child.col, $event)},"touchstart":function($event){_vm.select(child.row, child.col, $event)}}},[_vm._v(_vm._s(child.day)+"\n        ")])}))})],2):_vm._e(),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showHour && (_vm.type=='datetime'||_vm.type=='time')),expression:"showHour && (type=='datetime'||type=='time')"}],staticClass:"calendar-time"},[(_vm.showHour)?_c('div',{staticClass:"timer"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.hour),expression:"hour"}],attrs:{"type":"number","min":"0","max":"23","maxlength":"2"},domProps:{"value":_vm.hour,"value":_vm._s(_vm.hour)},on:{"change":_vm.changeTime,"input":function($event){if($event.target.composing){ return; }_vm.hour=_vm._n($event.target.value)},"blur":function($event){_vm.$forceUpdate()}}}),_vm._v(_vm._s(_vm.$lt("HOUR"))+"\n            "),(_vm.showMinute)?_c('span',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.minute),expression:"minute"}],attrs:{"type":"number","min":"0","max":"59","maxlength":"2"},domProps:{"value":_vm.minute,"value":_vm._s(_vm.minute)},on:{"change":_vm.changeTime,"input":function($event){if($event.target.composing){ return; }_vm.minute=_vm._n($event.target.value)},"blur":function($event){_vm.$forceUpdate()}}}),_vm._v(_vm._s(_vm.$lt("MINUTE"))+"\n            ")]):_vm._e(),_vm._v(" "),(_vm.showSecond)?_c('span',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.second),expression:"second"}],attrs:{"type":"number","min":"0","max":"59","maxlength":"2"},domProps:{"value":_vm.second,"value":_vm._s(_vm.second)},on:{"change":_vm.changeTime,"input":function($event){if($event.target.composing){ return; }_vm.second=_vm._n($event.target.value)},"blur":function($event){_vm.$forceUpdate()}}}),_vm._v(_vm._s(_vm.$lt("SECOND"))+"\n            ")]):_vm._e()]):_vm._e()])],1)}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vueify/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-7360cd77", __vue__options__)
  } else {
    hotAPI.reload("data-v-7360cd77", __vue__options__)
  }
})()}