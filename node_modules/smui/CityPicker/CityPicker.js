;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _SelectList = require('../SelectList');

var _SelectList2 = _interopRequireDefault(_SelectList);

var _ui = require('../base/ui');

var _ui2 = _interopRequireDefault(_ui);

var _cnCity = require('cn-city');

var CityInfo = _interopRequireWildcard(_cnCity);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var params = {
    province: '',
    city: '',
    cityName: '',
    provinceName: '',
    isInputing: true,
    value: '',
    cityList: []
};

exports.default = {
    mixins: [_ui2.default],
    params: params,
    ready: function ready() {
        if (this.province !== '') {
            this.getCityList();
            this.emit('city-change', this.info);
        }
    },

    computed: {
        provinceList: function provinceList() {
            var list = [];
            for (var code in CityInfo.province) {
                list.push({
                    value: code,
                    name: CityInfo.province[code]
                });
            }
            return list;
        },
        info: function info(v) {
            var val = {
                provinceName: this.provinceName,
                cityName: this.cityName,
                province: this.province,
                value: [this.provinceName, this.cityName].join('/'),
                city: this.city
            };
            return val;
        }
    },
    watch: {
        province: function province(val) {
            this.getCityList();
            this.emit('province-change', this.info);
        },
        cityName: function cityName(value) {}
    },
    methods: {
        changeProvince: function changeProvince(e) {
            this.provinceName = e.data.name;
            this.province = e.data.value;
        },
        changeCity: function changeCity(e) {
            this.city = e.data.value;
            this.cityName = e.data.name;
            this.emit('city-change', this.info);
        },
        getCityList: function getCityList() {
            var idList = CityInfo.cityMap[this.province] || [];
            this.cityList = idList.map(function (id) {
                return {
                    value: id,
                    name: CityInfo.city[id]
                };
            });
            this.provinceName = CityInfo.province[this.province];
            this.city = this.cityList[0].value;
            this.cityName = this.cityList[0].name;
        }
    },
    components: {
        SelectList: _SelectList2.default
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"city-picker"},[_c('select-list',{attrs:{"params":{items: _vm.provinceList, value: _vm.province, name: '选择省份'}},on:{"value-change":_vm.changeProvince}}),_vm._v(" "),(_vm.cityList.length)?_c('select-list',{attrs:{"params":{items: _vm.cityList, value: _vm.city, name: '选择城市'}},on:{"value-change":_vm.changeCity}}):_vm._e()],1)}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vueify/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-d8f43352", __vue__options__)
  } else {
    hotAPI.reload("data-v-d8f43352", __vue__options__)
  }
})()}