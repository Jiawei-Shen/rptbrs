'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Field = exports.helpInfo = undefined;

var _wali = require('wali');

var _wali2 = _interopRequireDefault(_wali);

var _helper = require('./helper');

var _helper2 = _interopRequireDefault(_helper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// 字段提示信息
var helpInfo = exports.helpInfo = {};

var Field = exports.Field = function Field(el, option) {
    var field = this;
    this.el = el;
    this.name = option.name;
    this.text = option.text;
    var info = helpInfo[this.name];
    if (info) {
        this.maxLen = info.maxByteLength;
    }
    this.maxLen = this.maxLen || el.getAttribute('maxlength');
    this.wildcard = !!option.wildcard;

    this.helper = new _helper2.default({
        name: this.name,
        maxLen: this.maxLen,
        wildcard: this.wildcard,
        el: el
    });

    if (!el.name) {
        el.name = this.name;
    }
    this.option = option;

    this.state = {
        valid: true,
        error: '',
        message: ''
    };

    this.__defineGetter__('value', function () {
        return this.el.value;
    });

    this.el.validate = function () {
        return field.validate();
    };
    this.init();
};

Field.prototype.state = {};

Field.prototype.events = {
    change: function change(e) {
        this.validate();
        var vm = (this.el.__v_model || {}).vm;
        if (vm) {
            var data = {
                data: {},
                target: this
            };
            e.data[this.name] = this.value;
            vm.$emit('change', data);
        }
    },
    keyup: function keyup(e) {
        this.validate();
    }
};

// es6 强制转换Object.keys等函数
function firstValue(obj) {
    for (var key in obj) {
        if (obj.hasOwnProperty(key)) {
            return obj[key];
        }
    }
}

function isNumber(code) {
    if (code >= 47 && code <= 57) {
        return true;
    }
    if (code >= 96 && code <= 105) {
        return true;
    }
    if (code >= 37 && code <= 40) {
        return true;
    }
    if (code === 190 || code === 110 || code === 8) {
        return true;
    }
    return false;
}

// check 函数需要定制
Field.check = function (name, value, text) {
    return _wali2.default.check(name, value);
};

Field.prototype.validate = function () {
    var info = Field.check(this.name, this.value, this.text);
    if (info !== true) {
        var msg = firstValue(info);
        this.el.setCustomValidity(msg);
    } else {
        this.el.setCustomValidity('');
    }
    if (this.el.showMessage) {
        this.el.showMessage();
    }
    return this.el.valid;
};

Field.prototype.showMessage = function () {
    return _wali2.default.check(this.name, this.value);
};

Field.prototype.init = function () {
    this.el.classList.add('field');
    this.addEvents();
};

Field.prototype.addEvents = function () {
    var el = this.el;
    for (var e in this.events) {
        el.addEventListener(e, this.events[e].bind(this));
    }
    if (el && el.type === 'number') {
        el.onkeydown = function (e) {
            if (!isNumber(e.keyCode)) {
                return false;
            }
            return true;
        };
    }
};

Field.prototype.removeEvents = function () {
    var el = this.el;
    for (var e in this.events) {
        el.removeEventListener(e, this.events[e]);
    }
};

exports.default = {
    update: function update(target, option) {
        if (!target.field) {
            target.field = new Field(target, option.value);
        }
    },
    inserted: function inserted() {},
    bind: function bind(target, option) {
        if (!target.field) {
            target.field = new Field(target, option.value);
        }
    },
    unbind: function unbind(target) {
        if (target.field) {
            target.field.removeEvents();
        }
    }
};