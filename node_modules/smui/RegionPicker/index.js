var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".region-picker-panel {\n  background: #fff;\n}\n.region-picker-panel .all-region {\n  background: #f8f8f8;\n  height: 30px;\n}\n.region-picker-panel ul {\n  line-height: 0;\n}\n.region-picker-panel .area-li {\n  margin-top: 5px;\n}\n.region-picker-panel .area-li,\n.region-picker-panel .all-region {\n  padding-left: 100px;\n  position: relative;\n  line-height: 26px;\n}\n.region-picker-panel .area-li .area-content,\n.region-picker-panel .all-region .area-content {\n  position: absolute;\n  left: 10px;\n  top: 3px;\n}\n.region-picker-panel .area-li li,\n.region-picker-panel .all-region li {\n  display: inline-block;\n  line-height: 26px;\n  position: relative;\n  color: #333;\n  width: 100px;\n  font-size: 12px;\n  box-sizing: border-box;\n}\n.region-picker-panel .area-content,\n.region-picker-panel .city-content,\n.region-picker-panel .pro-content {\n  cursor: pointer;\n  display: block;\n  position: relative;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.region-picker-panel .area-content input,\n.region-picker-panel .city-content input,\n.region-picker-panel .pro-content input {\n  margin-right: 5px;\n  cursor: pointer;\n  position: relative;\n  top: 1px;\n  width: 14px;\n  height: 14px;\n  vertical-align: baseline;\n}\n.region-picker-panel .area-content span,\n.region-picker-panel .city-content span,\n.region-picker-panel .pro-content span {\n  width: 26px;\n  white-space: pre;\n  font-size: 12px;\n}\n.region-picker-panel .area-content .num-tip,\n.region-picker-panel .city-content .num-tip,\n.region-picker-panel .pro-content .num-tip {\n  position: absolute;\n  right: 0px;\n  min-width: 20px;\n  top: 0px;\n  display: inline-block;\n  line-height: 1.5em;\n  z-index: 1;\n  background: #dedede75;\n  border: 1px solid #cccccc8a;\n  padding: 3px 5px;\n  transform: scale(0.7);\n  color: #999;\n  white-space: unset;\n}\n.region-picker-panel .li-province {\n  display: inline-block;\n  border: 1px solid #fff;\n}\n.region-picker-panel .ul-city {\n  position: absolute;\n  background: #fff;\n  width: 310px;\n  left: -1px;\n  top: 100%;\n  z-index: 2;\n  line-height: 26px;\n  border: 1px solid #e4e4e4;\n  padding-top: 6px;\n}\n.region-picker-panel .city-content {\n  padding: 0 10px;\n}\n.region-picker-panel .li-province {\n  border: 1px solid #fff;\n}\n.region-picker-panel .li-province .pro-parent {\n  border: 1px solid #fff;\n  display: block;\n  position: relative;\n  padding-left: 10px;\n}\n.region-picker-panel .li-province .pro-parent .pro-shadow {\n  width: 100%;\n  height: 9px;\n  background: #fff;\n  top: 90%;\n  position: absolute;\n  z-index: 9;\n  left: 0;\n  display: none;\n}\n.region-picker-panel .li-province .pro-parent:hover {\n  border: 1px solid #e4e4e4;\n  background: #fff;\n  z-index: 9;\n  box-shadow: 0px 0px 2px #e4e4e4;\n}\n.region-picker-panel .li-province .pro-parent:hover .ul-city {\n  box-shadow: 0px 0px 2px #e4e4e4;\n}\n.region-picker-panel input.checked {\n  background-position: 0px 0!important;\n}\n.region-picker-panel input.indeter {\n  background-position: -45px 0 !important;\n}")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _ui = require('../base/ui');

var _ui2 = _interopRequireDefault(_ui);

var _regionData = require('../Region/regionData');

var _regionData2 = _interopRequireDefault(_regionData);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var regionLevel = {
    country: 10,
    area: 11,
    province: 12,
    city: 13
};

exports.default = {
    params: {},
    mixins: [_ui2.default],
    data: function data() {
        var data = this.getInitData();
        return data;
    },
    mounted: function mounted() {
        if (this.params) {
            var _params = this.params,
                ids = _params.ids,
                names = _params.names;

            if (typeof names === 'string') {
                names = names.split(';');
            }
            if (typeof ids === 'string') {
                ids = ids.split(';');
            }
            this.setSelected(ids, names);
        }
    },

    methods: {
        getInitData: function getInitData() {
            var regionData = JSON.parse((0, _stringify2.default)(_regionData2.default));
            var regionTree = buildRegionTree(regionData);
            var root = regionTree['100001'];
            return {
                root: root,

                regionTree: regionTree,
                idMap: regionData,
                nameMap: buildNameTree(regionTree)
            };
        },
        updateItem: function updateItem(item) {
            if (!item) {
                return;
            }
            var s = item.selectedList.length;
            var c = item.children.length;
            var selected = [];
            var idx = -1;
            if (item.parent) {
                selected = item.parent.selectedList;
                idx = selected.indexOf(item.id);
            }
            if (s > 0) {
                if (s === c) {
                    item.checked = true;
                    item.indeterminate = false;
                    if (idx === -1) {
                        selected.indexOf(item.id);
                    }
                } else {
                    item.checked = false;
                    item.indeterminate = true;
                    if (idx > -1) {
                        selected.splice(idx, 1);
                    }
                }
            } else {
                item.indeterminate = false;
                item.checked = false;
                if (idx > -1) {
                    selected.splice(idx, 1);
                }
            }
            if (item.parent) {
                this.updateItem(item.parent);
            }
            return item.indeterminate;
        },
        proMouseOver: function proMouseOver(item) {
            if (item.children && item.children.length) {
                item.showLayer = true;
            }
        },
        proMouseOut: function proMouseOut(item) {
            item.showLayer = false;
        },
        clickArea: function clickArea(item, option) {
            var _this = this;

            if (option.target) {
                option = option.target;
            }
            var checked = option.checked;
            item.indeterminate = false;

            if (item.children) {
                if (checked) {
                    item.checked = true;
                    item.selectedList = item.children.map(function (s) {
                        return s.id;
                    });
                } else {
                    item.checked = false;
                    item.selectedList = [];
                }
                item.children.forEach(function (s) {
                    _this.clickArea(s, { checked: checked, prevent: true });
                });
            }

            if (!option.prevent && item.parent) {
                this.$nextTick(function () {
                    _this.updateItem(item.parent);
                });
            }
            if (this.fork) {
                clearTimeout(this.fork);
            }
            this.fork = setTimeout(function () {
                var selected = _this.getSelected();
                _this.emit('select-changed', { selected: selected });
            }, 500);
        },
        setSelected: function setSelected(_ref) {
            var _this2 = this;

            var names = _ref.names,
                ids = _ref.ids,
                reset = _ref.reset;

            if (reset) {
                (0, _assign2.default)(this, this.getInitData());
            }
            if (names && names.length) {
                (function () {
                    _this2.nameMap = _this2.nameMap || {};
                    var pmap = {};
                    names.forEach(function (name) {
                        var citem = _this2.nameMap[name];
                        if (!citem) {
                            name = name.split('-').pop();
                            citem = _this2.nameMap[name];
                        }
                        citem && _this2.clickArea(citem, { checked: true });
                        if (citem && citem.parentId) {
                            citem.checked = true;
                            citem.parent.selectedList.push(citem.id);
                            pmap[citem.parentId] = citem.parent;
                        }
                    });

                    setTimeout(function () {
                        for (var pid in pmap) {
                            _this2.updateItem(pmap[pid]);
                        }
                    }, 100);
                })();
            }
            if (ids && ids.length) {
                var idMap = this.idMap || {};
                ids.forEach(function (id) {
                    var citem = idMap[id];
                    citem && _this2.clickArea(citem, { checked: true });
                });
            }
        },
        getSelected: function getSelected() {
            var selected = [];
            function getSelectedItem(item, level) {
                if (item.checked && level > 2) {
                    var name = item.name,
                        id = item.id;

                    if (level === 4) {
                        name = item.parent.name + '-' + name;
                    }
                    selected.push({ name: name, id: id });
                    return;
                }
                if (!item.children) {
                    return;
                }
                item.children.forEach(function (o) {
                    getSelectedItem(o, level + 1);
                });
            }
            getSelectedItem(this.root, 1);
            return selected;
        }
    }
};

function buildRegionTree(regionData) {
    var citem = null;
    for (var key in regionData) {
        if (regionData.hasOwnProperty(key)) {
            citem = regionData[key];
            citem.selectedList = [];
            citem.disabled = false;
            citem.showLayer = false;
            citem.checked = false;
            citem.indeterminate = false;
            citem.children = citem.children || [];
            if (citem.parentId > 0) {
                var parentItem = regionData[citem.parentId];
                parentItem.children = parentItem.children || [];
                parentItem.children.push(citem);
                citem.parent = parentItem;
            }
        }
    }
    return regionData;
}

function buildNameTree(regionTree) {
    var nameTree = {};
    for (var i in regionTree) {
        var citem = regionTree[i];
        if (regionTree.hasOwnProperty(i) && citem.level > regionLevel.area) {
            if (citem.level < 13) {
                nameTree[citem.name] = citem;
            }
            for (var j = 0; j < citem.children.length; j++) {
                var cjitem = citem.children[j];
                nameTree[citem.name + '-' + cjitem.name] = cjitem;
                if (!nameTree[cjitem.name]) {
                    nameTree[cjitem.name] = cjitem;
                }
            }
        }
    }
    return nameTree;
}
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"region-picker-panel"},[_c('div',{staticClass:"all-region"},[_c('div',{staticClass:"area-content"},[_c('label',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.regionTree.selectedList),expression:"regionTree.selectedList"}],class:{checked: _vm.root.checked, indeter: _vm.root.indeterminate},attrs:{"type":"checkbox","disabled":_vm.root.disabled},domProps:{"value":100001,"checked":Array.isArray(_vm.regionTree.selectedList)?_vm._i(_vm.regionTree.selectedList,100001)>-1:(_vm.regionTree.selectedList)},on:{"change":[function($event){var $$a=_vm.regionTree.selectedList,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=100001,$$i=_vm._i($$a,$$v);if($$c){$$i<0&&(_vm.regionTree.selectedList=$$a.concat($$v))}else{$$i>-1&&(_vm.regionTree.selectedList=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.regionTree.selectedList=$$c}},function($event){_vm.clickArea(_vm.root, $event)}]}}),_vm._v("\n                所有地域\n            ")])])]),_vm._v(" "),_c('ul',_vm._l((_vm.root.children),function(area){return _c('li',{staticClass:"area-li"},[_c('div',{staticClass:"area-content"},[_c('label',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.root.selectedList),expression:"root.selectedList"}],class:{checked: area.checked, indeter: area.indeterminate},attrs:{"type":"checkbox","disabled":area.disabled},domProps:{"value":area.id,"checked":Array.isArray(_vm.root.selectedList)?_vm._i(_vm.root.selectedList,area.id)>-1:(_vm.root.selectedList)},on:{"change":[function($event){var $$a=_vm.root.selectedList,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=area.id,$$i=_vm._i($$a,$$v);if($$c){$$i<0&&(_vm.root.selectedList=$$a.concat($$v))}else{$$i>-1&&(_vm.root.selectedList=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.root.selectedList=$$c}},function($event){_vm.clickArea(area, $event)}]}}),_vm._v("\n                    "+_vm._s(area.name)+":\n                ")])]),_vm._v(" "),_c('ul',_vm._l((area.children),function(item){return _c('li',{staticClass:"li-province"},[_c('div',{staticClass:"pro-parent",on:{"mouseleave":function($event){if($event.target !== $event.currentTarget){ return; }_vm.proMouseOut(item)},"mouseenter":function($event){if($event.target !== $event.currentTarget){ return; }_vm.proMouseOver(item)}}},[_c('div',{staticClass:"pro-shadow"}),_vm._v(" "),_c('div',{staticClass:"pro-content"},[_c('label',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(area.selectedList),expression:"area.selectedList"}],class:{checked: item.checked, indeter: item.indeterminate},attrs:{"type":"checkbox","disabled":item.disabled},domProps:{"value":item.id,"checked":Array.isArray(area.selectedList)?_vm._i(area.selectedList,item.id)>-1:(area.selectedList)},on:{"change":[function($event){var $$a=area.selectedList,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=item.id,$$i=_vm._i($$a,$$v);if($$c){$$i<0&&(area.selectedList=$$a.concat($$v))}else{$$i>-1&&(area.selectedList=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{area.selectedList=$$c}},function($event){_vm.clickArea(item, $event)}]}}),_vm._v(" "),_c('span',[_vm._v(_vm._s(item.name))])]),_vm._v(" "),(item.selectedList.length)?_c('div',{staticClass:"num-tip"},[_vm._v("\n                                "+_vm._s(item.selectedList.length)+"\n                            ")]):_vm._e()]),_vm._v(" "),_c('ul',{directives:[{name:"show",rawName:"v-show",value:(item.showLayer),expression:"item.showLayer"}],staticClass:"ul-city"},_vm._l((item.children),function(citem){return (item.children)?_c('li',{staticClass:"li-city"},[_c('div',{staticClass:"city-content"},[_c('label',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(item.selectedList),expression:"item.selectedList"}],attrs:{"type":"checkbox","disabled":citem.disabled},domProps:{"value":citem.id,"checked":Array.isArray(item.selectedList)?_vm._i(item.selectedList,citem.id)>-1:(item.selectedList)},on:{"change":[function($event){var $$a=item.selectedList,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=citem.id,$$i=_vm._i($$a,$$v);if($$c){$$i<0&&(item.selectedList=$$a.concat($$v))}else{$$i>-1&&(item.selectedList=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{item.selectedList=$$c}},function($event){_vm.clickArea(citem, $event)}]}}),_vm._v(" "),_c('span',{attrs:{"title":citem.name}},[_vm._v(_vm._s(citem.name))])])])]):_vm._e()}))])])}))])}))])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vueify/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-755753ed", __vue__options__)
  } else {
    hotAPI.reload("data-v-755753ed", __vue__options__)
  }
})()}