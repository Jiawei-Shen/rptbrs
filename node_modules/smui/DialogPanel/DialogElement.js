var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".dialog .main-wrapper {\n  z-index: 999;\n  background: #FFF;\n  position: absolute;\n  min-width: 200px;\n  min-height: 100px;\n}\n.dialog.poly {\n  width: 100vw !important;\n  height: 100vh;\n  min-height: 100px;\n  background: none;\n  border: none;\n  position: fixed;\n  overflow: auto;\n  top: 0;\n  left: 0;\n}\n.dialog.poly .mask-layer {\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.6);\n  z-index: 777;\n}\n.dialog.poly .main-wrapper {\n  position: absolute;\n  width: 400px;\n  margin-top: 20px;\n  margin-bottom: 100px;\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n  background: #FFF;\n}")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _ui = require('../base/ui');

var _ui2 = _interopRequireDefault(_ui);

var _layer = require('../base/layer');

var _layer2 = _interopRequireDefault(_layer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var params = {
    isShow: false,
    isFull: false,
    isModal: false,
    native: true,
    width: 100,
    height: 100,
    clazz: []
};

exports.default = {
    params: params,
    mixins: [_ui2.default, _layer2.default],
    methods: {
        show: function show() {
            var _this = this;

            this.isShow = true;
            if (this.native && this.$el.parentElement) {
                var dialog = this.$el.querySelector('dialog');
                if (!dialog.open) {
                    dialog.show();
                }
            } else if (this.isModal) {
                this.fixSize();
                setTimeout(function () {
                    _this.fixSize();
                }, 150);
            }
            return this;
        },
        showModal: function showModal() {
            var _this2 = this;

            this.isModal = true;
            if (this.native && this.$el.parentElement) {
                var dialog = this.$el.querySelector('.dialog');
                if (!dialog.open) {
                    dialog.showModal();
                }
                this.isShow = true;
            } else if (this.isModal) {
                this.isShow = true;
                setTimeout(function () {
                    _this2.fixSize();
                }, 200);
            }
            return this;
        },
        fixSize: function fixSize() {
            var el = document.body.querySelector('.dialog-wrapper');
            if (!this.height && el) {
                this.height = el.clientHeight;
            }

            if (!this.width && el) {
                this.width = el.clientWidth;
            }
        },
        open: function open() {
            this.isShow = true;
        },
        remove: function remove() {
            this.isShow = false;
            this.$el.remove();
        },
        close: function close() {
            this.isShow = false;
            if (this.$parent.removeOnClose) {
                this.$el.remove();
            }
        },
        hide: function hide() {
            this.isShow = false;
        }
    },
    watch: {
        isShow: function isShow(val) {
            if (this.native) {
                var el = this.$el.querySelector('dialog');
                val ? el.show() : el.close();
            }
        }
    },
    computed: {
        dialogStyle: function dialogStyle() {
            if (!this.isModal) {
                return this.style;
            }
            var pos = {};
            if (this.style.height) {
                pos.position = 'relative';
            }
            return (0, _assign2.default)({}, this.style, pos);
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"dialog-element"},[_c('div',[(_vm.native)?_c("dialog",{tag:"dialog",staticClass:"dialog",class:_vm.clazz,style:(_vm.dialogStyle)},[_vm._t("default")],2):_vm._e()]),_vm._v(" "),(!_vm.native && _vm.isShow)?_c('div',{staticClass:"dialog",class:{poly: _vm.isModal}},[(_vm.isModal)?_c('div',{staticClass:"mask-layer"}):_vm._e(),_vm._v(" "),_c('div',{staticClass:"main-wrapper",class:_vm.clazz,style:(_vm.dialogStyle)},[_vm._t("default")],2)]):_vm._e()])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vueify/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-14df9ea9", __vue__options__)
  } else {
    hotAPI.reload("data-v-14df9ea9", __vue__options__)
  }
})()}