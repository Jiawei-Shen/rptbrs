var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".tree-wrapper {\n  /* .expand-enter 定义进入的开始状态 */\n  /* .expand-leave 定义离开的结束状态 */\n}\n.tree-wrapper ul {\n  margin-left: 1rem;\n  list-style-type: none;\n  padding: 10px;\n}\n.tree-wrapper .list-icon {\n  display: inline;\n  margin-right: 10px;\n  color: #777;\n}\n.tree-wrapper li {\n  position: relative;\n  cursor: pointer;\n  box-sizing: border-box;\n}\n.tree-wrapper li span {\n  text-decoration: none;\n  color: #777;\n  font-size: 14px;\n  display: inline-block;\n  margin-left: 15px;\n  width: 100%;\n}\n.tree-wrapper li span:hover {\n  color: #42b983;\n}\n.tree-wrapper li i {\n  color: #777;\n  position: absolute;\n  top: 4px;\n  font-size: 0.6em;\n}\n.tree-wrapper .unfold .folder {\n  transform: scaleY(1);\n  transform-origin: top center;\n  transition: all .7s ease;\n}\n.tree-wrapper .fold .folder {\n  min-height: 0;\n  display: none;\n  transform: scaleY(0.1);\n  transition: all .7s ease;\n}\n.tree-wrapper .fold .sm-arrow-dropdown,\n.tree-wrapper .sm-arrow-dropdown.right {\n  transform: rotateZ(-90deg);\n}\n.tree-wrapper .expand-transition {\n  transition: all .7s ease;\n  height: auto;\n  padding: 10px;\n}\n.tree-wrapper .expand-enter,\n.tree-wrapper .expand-leave {\n  height: 0;\n  padding: 0 10px;\n  opacity: 0;\n}")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _ui = require('../base/ui');

var _ui2 = _interopRequireDefault(_ui);

var _vue = require('vue');

var _vue2 = _interopRequireDefault(_vue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var params = {
    clazz: ['tree-list'],
    selectable: false,
    checkList: [],
    parentId: 0,
    items: [],
    title: '',
    skey: 'id',
    showItem: ''
};

exports.default = {
    name: 'tree-node',
    params: params,
    mixins: [_ui2.default],
    watch: {
        items: function items(val) {
            this.format(val);
        }
    },
    methods: {
        get: function get(id) {
            return this.$el.querySelector('#ipt-' + id);
        },
        getFolder: function getFolder(id) {
            return this.$el.querySelector('#node-' + id);
        },
        getTree: function getTree(id) {
            return this.$refs['tree-' + id];
        },
        getNodeParams: function getNodeParams(item) {
            var selectable = this.selectable;
            if (item.selectable === undefined) {
                item.selectable = selectable;
            }
            return {
                selectable: item.selectable,
                items: item.children,
                parentId: item.id
            };
        },
        toggle: function toggle(item) {
            item.$fold = !item.$fold;
            this.emit('toggle', item);
        },
        format: function format(tree) {
            var _this = this;

            var rd = Math.floor(Math.random() * 100000).toString(32) + '-';
            tree.forEach(function (item, idx) {
                if (!item.hasOwnProperty('$fold')) {
                    _vue2.default.set(item, '$fold', false);
                }
                item.id = item[_this.skey] || rd + idx;
            });
        },
        clickItem: function clickItem(item) {
            this.emit('item-clicked', item);
        },
        clickSub: function clickSub(e) {
            this.emit('item-clicked', e.data);
        },
        selectAll: function selectAll(checked) {
            var _this2 = this;

            if (checked === false) {
                this.checkList.splice(0);
            } else {
                checked = true;
                this.checkList = this.items.map(function (x) {
                    return x.id;
                });
            }
            this.items.forEach(function (item) {
                var ref = _this2.getTree(item.id);
                if (ref) {
                    ref[0].selectAll(checked);
                }
            });
        },
        checkItem: function checkItem(item) {
            var checkedAll = false;
            var indeterminate = false;
            var id = this.parentId;
            var semi = this.semi;
            if (this.checkList.length === this.items.length) {
                checkedAll = true;
            } else {
                if (this.checkList.length > 0) {
                    indeterminate = true;
                }
            }

            this.emit('change-checked', {
                checkedAll: checkedAll,
                semi: semi,
                indeterminate: indeterminate,
                id: id
            });

            if (item && item.children) {
                var ref = this.getTree(item.id);
                if (ref) {
                    var checked = window.event.target.checked;
                    ref[0].selectAll(checked);
                }
            }
        },
        check: function check(id, checked) {
            var idx = this.checkList.findIndex(function (x) {
                return x === id;
            });
            if (checked === false) {
                if (idx > -1) {
                    this.checkList.splice(idx, 1);
                }
            } else if (idx === -1) {
                this.checkList.push(id);
            }
        },
        changeChecked: function changeChecked(e) {
            var _this3 = this;

            var data = e.data;
            var box = this.get(data.id);
            this.semi = false;
            if (data.checkedAll) {
                box.indeterminate = false;
                this.check(data.id, true);
            } else if (data.indeterminate || data.semi) {
                box.indeterminate = true;
                this.semi = true;
                this.check(data.id, false);
            } else {
                box.indeterminate = false;
                this.check(data.id, false);
            }
            _vue2.default.nextTick(function () {
                _this3.checkItem();
            });
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"tree-wrapper"},[_c('ul',{class:_vm.clazz},_vm._l((_vm.items),function(item){return _c('li',{staticClass:"tree-item",class:{fold: item.$fold, unfold: !item.$fold}},[_c('div',{attrs:{"data-id":item.id}},[(item.children)?_c('i',{staticClass:"sm-arrow-dropdown",on:{"click":function($event){_vm.toggle(item)}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"item",on:{"click":function($event){_vm.clickItem(item)}}},[(_vm.selectable)?_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.checkList),expression:"checkList"}],attrs:{"type":"checkbox","name":item.id,"id":'ipt-'+item.id},domProps:{"value":item.id,"checked":Array.isArray(_vm.checkList)?_vm._i(_vm.checkList,item.id)>-1:(_vm.checkList)},on:{"change":[function($event){var $$a=_vm.checkList,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=item.id,$$i=_vm._i($$a,$$v);if($$c){$$i<0&&(_vm.checkList=$$a.concat($$v))}else{$$i>-1&&(_vm.checkList=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.checkList=$$c}},function($event){_vm.checkItem(item)}]}}):_vm._e(),_vm._v("\n                    "+_vm._s(item.name)+"\n                ")])]),_vm._v(" "),_c('div',{staticClass:"folder",attrs:{"id":'node-' + item.id}},[(item.children)?_c('tree-node',{ref:'tree-' + item.id,refInFor:true,attrs:{"params":_vm.getNodeParams(item)},on:{"item-clicked":_vm.clickSub,"change-checked":_vm.changeChecked}}):_vm._e()],1)])}))])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vueify/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-7889a9f7", __vue__options__)
  } else {
    hotAPI.reload("data-v-7889a9f7", __vue__options__)
  }
})()}