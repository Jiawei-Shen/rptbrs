import { Observer } from 'rxjs';
import { GenericFilehandle } from 'generic-filehandle';
import { Feature } from './bbi';
interface CoordRequest {
    chrId: number;
    start: number;
    end: number;
}
interface Options {
    signal?: AbortSignal;
    request?: CoordRequest;
}
/**
 * View into a subset of the data in a BigWig file.
 *
 * Adapted by Robert Buels and Colin Diesh from bigwig.js in the Dalliance Genome
 * Explorer by Thomas Down.
 * @constructs
 */
export declare class BlockView {
    private cirTreeOffset;
    private cirTreeLength;
    private bbi;
    private isCompressed;
    private isBigEndian;
    private refsByName;
    private blockType;
    private cirTreePromise?;
    private featureCache;
    private leafParser;
    private bigWigParser;
    private bigBedParser;
    private summaryParser;
    constructor(bbi: GenericFilehandle, refsByName: any, cirTreeOffset: number, cirTreeLength: number, isBigEndian: boolean, isCompressed: boolean, blockType: string);
    readWigData(chrName: string, start: number, end: number, observer: Observer<Feature[]>, opts: Options): Promise<void>;
    private parseSummaryBlock;
    private parseBigBedBlock;
    private parseBigWigBlock;
    private static coordFilter;
    readFeatures(observer: Observer<Feature[]>, blocks: any, opts?: Options): Promise<void>;
}
export {};
