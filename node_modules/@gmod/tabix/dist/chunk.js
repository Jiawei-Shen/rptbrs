"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// little class representing a chunk in the index
var Chunk = /** @class */ (function () {
    /**
     * @param {VirtualOffset} minv
     * @param {VirtualOffset} maxv
     * @param {number} bin
     * @param {number} [fetchedSize]
     */
    function Chunk(minv, maxv, bin, fetchedSize) {
        if (fetchedSize === void 0) { fetchedSize = undefined; }
        this.minv = minv;
        this.maxv = maxv;
        this.bin = bin;
        this._fetchedSize = fetchedSize;
    }
    Chunk.prototype.toUniqueString = function () {
        return "".concat(this.minv, "..").concat(this.maxv, " (bin ").concat(this.bin, ", fetchedSize ").concat(this.fetchedSize(), ")");
    };
    Chunk.prototype.toString = function () {
        return this.toUniqueString();
    };
    Chunk.prototype.compareTo = function (b) {
        return (this.minv.compareTo(b.minv) ||
            this.maxv.compareTo(b.maxv) ||
            this.bin - b.bin);
    };
    Chunk.prototype.fetchedSize = function () {
        if (this._fetchedSize !== undefined) {
            return this._fetchedSize;
        }
        return this.maxv.blockPosition + (1 << 16) - this.minv.blockPosition;
    };
    return Chunk;
}());
exports.default = Chunk;
//# sourceMappingURL=chunk.js.map